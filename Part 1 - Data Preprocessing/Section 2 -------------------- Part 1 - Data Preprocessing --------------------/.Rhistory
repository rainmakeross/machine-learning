dataset$Country = factor(dataset$Country, levels=c('France', 'Spain', 'Germany'), labels=c(1,2,3))
setwd("~/Repo/personal/learning/machine-learning/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------")
dataset
# Take care of missing values
dataset$Age = ifelse(is.na(dataset$Age),ave(dataset$Age,
FUN=function(x)(mean(x, na.rm=TRUE))),
dataset$Age)
dataset=read.csv('Data.csv')
# Take care of missing values
dataset$Age = ifelse(is.na(dataset$Age),ave(dataset$Age,
FUN=function(x)(mean(x, na.rm=TRUE))),
dataset$Age)
# Load dataset
dataset=read.csv('Data.csv')
# Take care of missing values
dataset$Age = ifelse(is.na(dataset$Age),ave(dataset$Age,
FUN=function(x)(mean(x, na.rm=TRUE))),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),ave(dataset$Salary,
FUN=function(x)(mean(x, na.rm=TRUE))),
dataset$Salary)
dataset$Country = factor(dataset$Country, levels=c('France', 'Spain', 'Germany'), labels=c(1,2,3))
# Load dataset
dataset=read.csv('Data.csv')
# Take care of missing values
dataset$Age = ifelse(is.na(dataset$Age),ave(dataset$Age,
FUN=function(x)(mean(x, na.rm=TRUE))),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),ave(dataset$Salary,
FUN=function(x)(mean(x, na.rm=TRUE))),
dataset$Salary)
dataset$Country = factor(dataset$Country, levels=c('France', 'Spain', 'Germany'), labels=c(1,2,3))
dataset$Purchased = factor(dataset$Purchased, levels=c('Yes', 'No'), labels=c(1,0))
library(caTools)
install.packages("caTools")
library(caTools)
# Load dataset
dataset=read.csv('Data.csv')
# Take care of missing values
dataset$Age = ifelse(is.na(dataset$Age),ave(dataset$Age,
FUN=function(x)(mean(x, na.rm=TRUE))),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),ave(dataset$Salary,
FUN=function(x)(mean(x, na.rm=TRUE))),
dataset$Salary)
dataset$Country = factor(dataset$Country, levels=c('France', 'Spain', 'Germany'), labels=c(1,2,3))
dataset$Purchased = factor(dataset$Purchased, levels=c('Yes', 'No'), labels=c(1,0))
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio=0.8)
split
split = sample.split(dataset$Purchased, SplitRatio=0.8)
training_set = subset(dataset, split==TRUE)
test_set = subset(dataset, split==FALSE)
View(training_set)
View(test_set)
View(training_set)
# Scale features
training_set = scale(training_set)
# Scale features
training_set[,2:3] = scale(training_set[,2:3])
test_set[,2:3] = scale(test_set[,2:3])
